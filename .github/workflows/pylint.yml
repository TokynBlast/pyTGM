name: Pylint

on:
  push:
    branches:
      - main
    paths:
      - "pyTGM/**"
      - "CMakeLists.txt"
      - ".github/workflows/pylint.yml"
      - ".pylintrc"
      - "setup.py"

jobs:
  compile-and-lint:
    runs-on: ubuntu-latest
    env:
      BUILT_MODULE: ${{ github.workspace }}/built_module
      STUBS: ${{ github.workspace }}/stubs
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cython3
          python -m pip install --upgrade pip
          pip install --upgrade Cython setuptools wheel pylint mypy
      - name: Build Cython extensions
        env:
          SKIP_CYTHON: "1"
        run: |
          # Create symbolic link for cython3
          sudo ln -s $(which cython) /usr/local/bin/cython3

          mkdir -p pyTGM/{encrypt/{b64,hk512},terminal/{clear,color,geky,pos},sound,rect}

          for module in encrypt/b64 encrypt/hk512 terminal/clear terminal/color terminal/geky terminal/pos sound rect; do
            touch pyTGM/$module/*.pyx
          done
          
          python setup.py build_ext --inplace --verbose

          mkdir -p "${{ github.workspace }}/built_module/pyTGM/encrypt"
          mkdir -p "${{ github.workspace }}/built_module/pyTGM/terminal"

          # Copy compiled modules
          cp pyTGM/encrypt/hk512/hk512.so "${{ github.workspace }}/built_module/pyTGM/encrypt/"
          cp pyTGM/encrypt/b64/b64.so "${{ github.workspace }}/built_module/pyTGM/encrypt/"
          cp pyTGM/terminal/clear/clear.so "${{ github.workspace }}/built_module/pyTGM/terminal/"
          cp pyTGM/terminal/color/color.so "${{ github.workspace }}/built_module/pyTGM/terminal/"
          cp pyTGM/terminal/geky/geky.so "${{ github.workspace }}/built_module/pyTGM/terminal/"
          cp pyTGM/terminal/pos/pos.so "${{ github.workspace }}/built_module/pyTGM/terminal/"
          cp pyTGM/sound/sound.so "${{ github.workspace }}/built_module/pyTGM/"
          cp pyTGM/rect/rect.so "${{ github.workspace }}/built_module/pyTGM/"

      - name: Generate stubs & run pylint
        env:
          PYTHONPATH: ${{ github.workspace }}/built_module:${{ github.workspace }}/stubs
        run: |
          mkdir -p "${{ github.workspace }}/stubs"
          for mod in pyTGM pyTGM.sound pyTGM.encrypt pyTGM.encrypt.hk512 pyTGM.encrypt.b64 pyTGM.rect pyTGM.terminal pyTGM.terminal.clear pyTGM.terminal.color pyTGM.terminal.geky pyTGM.terminal.pos; do
              stubgen $mod -o "${{ github.workspace }}/stubs"
          done
          pylint $(git ls-files '*.py')
