name: Pylint

on:
  push:
    branches:
      - main
    paths:
      - "pyTGM/**"
      - "CMakeLists.txt"
      - ".github/workflows/pylint.yml"
      - ".pylintrc"
      - "setup.py"

jobs:
  compile-and-lint:
    runs-on: ubuntu-latest
    env:
      BUILT_MODULE: ${{ github.workspace }}/built_module
      STUBS: ${{ github.workspace }}/stubs
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cython3
          python -m pip install --upgrade pip
          pip install --upgrade Cython setuptools wheel pylint mypy
      - name: Build Cython extensions
        env:
          SKIP_CYTHON: "1"
        run: |
          sudo ln -s $(which cython) /usr/local/bin/cython3

          mkdir -p pyTGM/{encrypt/{b64,hk512},terminal/{clear,color,geky,pos},sound,rect}

          echo "Source locations:"
          find . -name "*.pyx" -o -name "*.cpp" -o -name "*.hpp"

          for dir in encrypt/b64 encrypt/hk512 terminal/clear terminal/color terminal/geky terminal/pos sound rect; do
            mkdir -p "pyTGM/$dir"
            find . -path "*/$dir/*" -type f \( -name "*.pyx" -o -name "*.cpp" -o -name "*.hpp" \) -print0 | while IFS= read -r -d $'\0' file; do
              dest="pyTGM/$dir/$(basename "$file")"
              if [ ! -e "$dest" ] || ! cmp -s "$file" "$dest"; then
                cp "$file" "$dest"
              fi
            done
          done

          echo "Files after copy:"
          ls -R pyTGM/

          python setup.py build_ext --inplace --verbose

          mkdir -p "built_module/pyTGM/"{encrypt,terminal,sound}

          find pyTGM -name "*.so" -exec bash -c '
            for f; do
              if [[ $f == *"/encrypt/"* ]]; then
                cp "$f" "built_module/pyTGM/encrypt/"
              elif [[ $f == *"/terminal/"* ]]; then
                cp "$f" "built_module/pyTGM/terminal/"
              elif [[ $f == *"/sound/"* ]]; then
                cp "$f" "built_module/pyTGM/sound/"
              else
                cp "$f" "built_module/pyTGM/"
              fi
            done
          ' bash {} +

      - name: Generate stubs & run pylint
        env:
          PYTHONPATH: ${{ github.workspace }}/built_module:${{ github.workspace }}/stubs:${{ github.workspace }}
        run: |
          mkdir -p "${{ github.workspace }}/stubs"

          pip install -e .

          python -m mypy.stubgen pyTGM -o "${{ github.workspace }}/stubs"

          # Generate stubs for submodules
          for mod in pyTGM.sound pyTGM.encrypt pyTGM.encrypt.hk512 pyTGM.encrypt.b64 pyTGM.rect pyTGM.terminal pyTGM.terminal.clear pyTGM.terminal.color pyTGM.terminal.geky pyTGM.terminal.pos; do
              python -m mypy.stubgen -m "$mod" -o "${{ github.workspace }}/stubs"
          done

          pylint $(git ls-files '*.py')
