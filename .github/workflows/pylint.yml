name: Pylint

on:
  push:
    branches:
      - main
    paths:
      - "pyTGM/**"
      - "CMakeLists.txt"
      - ".github/workflows/pylint.yml"
      - ".pylintrc"
      - "setup.py"

jobs:
  compile-and-lint:
    runs-on: ubuntu-latest
    env:
      BUILT_MODULE: ${{ github.workspace }}/built_module
      STUBS: ${{ github.workspace }}/stubs
      PYTHONPATH: ${{ github.workspace }}/built_module
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential
          python -m pip install --upgrade pip
          pip install --upgrade nanobind setuptools wheel pylint mypy

      - name: Determine nanobind CMake directory
        id: nanobind
        run: echo "dir=$(python -m nanobind --cmake_dir)" >> $GITHUB_OUTPUT

      - name: Build nanobind extensions
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/built_module" \
            -Dnanobind_DIR="${{ steps.nanobind.outputs.dir }}"
          cmake --build . --config Release --target install
          cd ..

      - name: Verify built files
        run: |
          echo "Checking for .so files in the build directory:"
          find build -name "*.so"
          echo "Checking for .so files in the built_module directory:"
          find built_module -name "*.so"

      - name: Test Python imports
        env:
          PYTHONPATH: ${{ github.workspace }}/built_module
        run: |
          python -c "import pyTGM.sound; print('pyTGM.sound imported successfully')"
          python -c "import pyTGM.terminal.geky; print('pyTGM.terminal.geky imported successfully')"

      - name: Generate stubs & run pylint
        env:
          PYTHONPATH: ${{ github.workspace }}/built_module:${{ github.workspace }}/stubs:${{ github.workspace }}
        run: |
          mkdir -p "${{ github.workspace }}/stubs"
          submodules=(
            "pyTGM.sound"
            "pyTGM.encrypt"
            "pyTGM.encrypt.hk512"
            "pyTGM.encrypt.b64"
            "pyTGM.rect"
            "pyTGM.terminal"
            "pyTGM.terminal.clear"
            "pyTGM.terminal.color"
            "pyTGM.terminal.geky"
            "pyTGM.terminal.pos"
          )
          for mod in "${submodules[@]}"; do
            echo "Generating stubs for $mod"
            stubgen -m "$mod" -o "${{ github.workspace }}/stubs"
          done
          pip install .
          pylint $(git ls-files '*.py')
