name: Security Check

on:
  push:
    paths:
      - pyTGM/**/*.py
      - .github/workflows/Saftey.yml
      - 'requirements.txt'
    branches:
      - main

jobs:
  security-audit:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt  # or install via setup.py/pyproject as appropriate

      # New step: Attempt to upgrade vulnerable packages before auditing
      - name: Upgrade vulnerable dependencies (via pip-audit)
        run: |
          pip install --upgrade pip pip-audit
          # Run pip-audit in JSON mode to find vulnerabilities (don't fail on exit)
          pip-audit --format=json -o audit.json || true
          python - <<'PYCODE'
          import json, subprocess, re, pathlib
          # Load audit results
          with open('audit.json') as f:
              results = json.load(f)
          # Get all packages that have known vulnerabilities
          vulnerable_packages = { item['name'] for item in results if item.get('vulns') }
          for pkg in sorted(vulnerable_packages):
              # Determine origin of the package (check common dependency files)
              origin = "not explicitly listed (possibly a transient dependency or manual install)"
              for file in ["setup.py", "pyproject.toml"]:
                  try:
                      text = pathlib.Path(file).read_text()
                      if re.search(rf'(^|\s){re.escape(pkg)}(?==|\s|$)', text):
                          origin = f"listed in {file}"
                          break
                  except FileNotFoundError:
                      continue
              print(f"⚠️ Vulnerable package '{pkg}' is {origin}. Upgrading it now...")
              subprocess.run(["python", "-m", "pip", "install", "--upgrade", pkg], check=True)
          PYCODE

      # Audit again after upgrades to ensure no vulnerabilities remain
      - name: Security audit (pip-audit post-upgrade)
        uses: pypa/gh-action-pip-audit@v1.1.0
        with:
           local: true   # audit only packages in our env
